---
# defaults file for zabbix-server

# Simple placeholder to allow other roles to detect this role
zabbix_server__role: True

# Enable facts deploiement
zabbix_server__facts: True

# Which version to install (if it is possible) from repositories or
# Specify here the full version you want if you install from source
#    The default for source installation is to choose the last "stable" one
#zabbix_server__version: 3.4


### SERVICE CONFIGURATION
# ---------------------------------------
# Name of zabbix service
zabbix_server__service_name: zabbix-server
zabbix_server__service_enabled: True

# User to run zabbix as
zabbix_server__service_user: zabbix
# Group to run zabbix as
zabbix_server__service_group: '{{ zabbix_server__service_user }}'

# Path to service executable file
zabbix_server__service_executable: "{{ zabbix_server__install_source_executable if zabbix_server__install_from_source else '/usr/sbin/zabbix_server' }}"

# Path to pidfile
zabbix_server__service_pidfile: /run/zabbix/zabbix_server.pid

# IPC socket directory.
#   Directory to store IPC sockets used by internal Zabbix services.
zabbix_server__service_socket_dir: '{{ zabbix_server__var_directory }}'

# File that contains environment variables for service unit
#zabbix_server__service_environment:

# Set to yes to deploy and override systemd service configuration
zabbix_server__service_configure_systemd: '{{ zabbix_server__install_from_source }}'


### INSTALL CONFIGURATION
# ---------------------------------------
# Which database type to use in 'mysql', 'pgsql'
#zabbix_server__database_type:

# List of required packages to install
zabbix_server__required_packages_names:
  - fping
  - nmap
  - snmp
  - traceroute

##
# If True, zabbix server will be compiled from sources
zabbix_server__install_from_source: False

# List of feature and their default status
zabbix_server__source_features_defaults:
  'enable-java': True
  'with-jabber': True
  'with-ldap':   True
  'with-libcurl': True
  'with-libevent': True
  'with-libpcre': True
  'with-libxml2': True
  'with-mysql': "{{ zabbix_server__database_type == 'mysql' }}"
  'with-net-snmp': True
  'with-openipmi': True
  'with-postgresql': "{{ zabbix_server__database_type == 'pgsql' }}"
  'with-ssh2': True

# Dict of overriding feature status
# Use this dict to edit feature status
zabbix_server__source_features_override: {}

# Final dict of feature to use during compilation
zabbix_server__source_features: '{{ zabbix_server__source_features_defaults|combine(zabbix_server__source_features_override) }}'

# List of package to install per feature if it is enabled
zabbix_server__source_packages_names_per_features:
  'enable-java':
    - openjdk-8-jdk-headless
  'with-jabber':
    - libiksemel-dev
    - libiksemel3
  'with-ldap':
    - libldap-2.4-2
    - libldap2-dev
  'with-libcurl':
    - libcurl4-openssl-dev
  'with-libevent':
    - libevent-dev
  'with-libpcre':
    - libpcre3-dev
  'with-libxml2':
    - libxml2
    - libxml2-dev
  'with-mysql':
    - libmariadbd18
    - libmariadbd-dev
  'with-net-snmp':
    - libsnmp-dev
  'with-openipmi':
    - libopenipmi-dev
  'with-postgresql': []
  'with-ssh2':
    - libssh2-1
    - libssh2-1-dev

# Directory where to download and compile sources
zabbix_server__install_source_directory: /opt/zabbix-server

# Installation path of the main binary
# This is not editable, it is managed by makefile
zabbix_server__install_source_executable: /usr/local/sbin/zabbix_server

# URL template to download source
# use the key _zabbix_server__full_version to replace version string
zabbix_server__install_source_url: 'https://sourceforge.net/projects/zabbix/files/ZABBIX%20Latest%20Stable/{{ _zabbix_server__full_version }}/zabbix-{{ _zabbix_server__full_version }}.tar.gz/download'

# Command to run to configure sources
zabbix_server__install_source_configure_command: './configure {{ zabbix_server__install_source_configure_options }}'
zabbix_server__install_source_configure_options: >
  --enable-server
  --enable-ipv6
  {% for name, status in zabbix_server__source_features|dictsort if status|bool %} --{{ name }}{% endfor -%}

# Command to run to compile sources
zabbix_server__install_source_compile_command: make

# Command to run to install sources
zabbix_server__install_source_install_command: make install

# Command to run to clean workspace when selected features changed
zabbix_server__install_source_clean_command: make clean && rm Makefile

# Configuration directory
zabbix_server__conf_directory: /etc/zabbix
# Location of var directory for zabbix
zabbix_server__var_directory: /var/lib/zabbix
# Location of logs for zabbix
zabbix_server__log_directory: /var/log/zabbix

# Main configuration file
zabbix_server__configuration_file: '{{ zabbix_server__conf_directory }}/zabbix_server.conf'

# Mapping of directory which contains database fixture
zabbix_server__database_init_directory_map:
  mysql: /usr/share/zabbix-server-mysql/
  pgsql: /usr/share/zabbix-server-pgsql/

# Where to place zabbix custom scripts
zabbix_server__custom_scripts_directory: /opt/zabbix-server-scripts


### GENERAL SECTION
# ---------------------------------------

# Include
#   You may include individual files or all files in a directory in the configuration file.
zabbix_server__conf_includes: []

##### Directories #####
# TmpDir Temporary directory.
zabbix_server__tmp_dir: /tmp

# AlertScriptsPath
#	Full path to location of custom alert scripts.
zabbix_server__alert_scripts_path: '{{ zabbix_server__custom_scripts_directory }}/alertscripts'

# ExternalScripts
#	Full path to location of external scripts.
#	Default depends on compilation options.
zabbix_server__external_scripts: '{{ zabbix_server__custom_scripts_directory }}/externalscripts'

# FpingLocation
#	Location of fping.
#	Make sure that fping binary has root ownership and SUID flag set.
zabbix_server__fping_location: /usr/sbin/fping

# Fping6Location
#	Location of fping6.
#	Make sure that fping6 binary has root ownership and SUID flag set.
#	Make empty if your fping utility is capable to process IPv6 addresses.
zabbix_server__fping6_location: /usr/sbin/fping6

##### Logs #####
# LogType : Specifies where log messages are written to:
#   system  - syslog
#   file    - file specified with LogFile parameter
#   console - standard output
zabbix_server__log_type: file

# LogFile : Log file name for LogType 'file' parameter.
zabbix_server__log_file: '{{ zabbix_server__log_directory }}/zabbix_server.log'

# LogFileSize
#   Maximum size of log file in MB.
#   0 - disable automatic log rotation.
zabbix_server__log_size: 1

# LogSlowQueries
#  How long a database query may take before being logged (in milliseconds).
#  Only works if DebugLevel set to 3, 4 or 5.
#  0 - don't log slow queries.
zabbix_server__log_slow_queries: 0

# DebugLevel
#   Specifies debug level:
#   0 - basic information about starting and stopping of Zabbix processes
#   1 - critical information
#   2 - error information
#   3 - warnings
#   4 - for debugging (produces lots of information)
#   5 - extended debugging (produces even more information)
# Range: 0-5
zabbix_server__debug_level: 3


############ NETWORK PARAMETERS #################
# ---------------------------------------

# ListenPort
#   Agent will listen on this port for connections from the server.
zabbix_server__listen_port: 10051

# ListenIP
# List of comma delimited IP addresses that the trapper should listen on.
# Trapper will listen on all network interfaces if this parameter is missing.
zabbix_server__listen_ip: 0.0.0.0

# SourceIP
#   Source IP address for outgoing connections.
#zabbix_server__source_ip:


############ DATABASE PARAMETERS #################
# ---------------------------------------

# DBHost : Database host name.
# If set to localhost, socket is used for MySQL.
# If set to empty string, socket is used for PostgreSQL.
zabbix_server__db_host: localhost

# DBSocket : Path to MySQL socket.
#zabbix_server__db_socket:

# DBPort : Database port when not using local socket. Ignored for SQLite
#zabbix_server__db_port: 3306

# DBName : Database name.
# For SQLite3 path to database file must be provided. DBUser and DBPassword are ignored.
# Warning: do not attempt to use the same database Zabbix server is using.
#zabbix_server__db_name:

# DBSchema : Schema name. Used for IBM DB2 and PostgreSQL.
zabbix_server__db_schema: public

# DBUser : Database user. Ignored for SQLite.
#zabbix_server__db_user:

# DBPassword : Database password. Ignored for SQLite.
#zabbix_server__db_password:


############ SERVER PARAMETERS #################
# ---------------------------------------

# Timeout
#   Specifies how long we wait for server, SNMP device or external check (in seconds).
zabbix_server__timeout: 3

# UnreachablePeriod
#   After how many seconds of unreachability treat a host as unavailable.
zabbix_server__unreachable_period: 45

# UnavailableDelay
#   How often host is checked for availability during the unavailability period, in seconds.
zabbix_server__unavailable_delay: 60

# UnreachableDelay
#   How often host is checked for availability during the unreachability period, in seconds.
zabbix_server__unreachable_delay: 15

##### House keeper #####
# HousekeepingFrequency
#   How often Zabbix will perform housekeeping procedure (in hours).
#   Housekeeping is removing outdated information from the database.
#   To prevent Housekeeper from being overloaded, no more than 4 times HousekeepingFrequency
#   hours of outdated information are deleted in one housekeeping cycle, for each item.
#   To lower load on server startup housekeeping is postponed for 30 minutes after server start.
#   With HousekeepingFrequency=0 the housekeeper can be only executed using the runtime control option.
#   In this case the period of outdated information deleted in one housekeeping cycle is 4 times the
#   period since the last housekeeping cycle, but not less than 4 hours and not greater than 4 days.
zabbix_server__housekeeping_frequency: 1

# MaxHousekeeperDelete
#   The table "housekeeper" contains "tasks" for housekeeping procedure in the format:
#   [housekeeperid], [tablename], [field], [value].
#   No more than 'MaxHousekeeperDelete' rows (corresponding to [tablename], [field], [value])
#   will be deleted per one task in one housekeeping cycle.
#   SQLite3 does not use this parameter, deletes all corresponding rows without a limit.
#   If set to 0 then no limit is used at all. In this case you must know what you are doing!
zabbix_server__max_housekeeper_delete: 5000

##### Caches #####
# CacheSize
#	Size of configuration cache, in bytes.
#	Shared memory size for storing host, item and trigger data.
# Range: 128K-8G
zabbix_server__cache_size: 8M

# CacheUpdateFrequency
#	How often Zabbix will perform update of configuration cache, in seconds.
# Range: 1-3600
zabbix_server__cache_update_frequency: 60

# HistoryCacheSize
#	Size of history cache, in bytes.
#	Shared memory size for storing history data.
# Range: 128K-2G
zabbix_server__history_cache_size: 16M

# HistoryIndexCacheSize
#	Size of history index cache, in bytes.
#	Shared memory size for indexing history cache.
# Range: 128K-2G
zabbix_server__history_index_cache_size: 4M

# TrendCacheSize
#	Size of trend cache, in bytes.
#	Shared memory size for storing trends data.
# Range: 128K-2G
zabbix_server__trend_cache_size: 4M

# ValueCacheSize
#	Size of history value cache, in bytes.
#	Shared memory size for caching item history data requests.
#	Setting to 0 disables value cache.
# Range: 0,128K-64G
zabbix_server__value_cache_size: 8M


############ POLLERS PARAMETERS #################
# ---------------------------------------

# StartPollers
# Number of pre-forked instances of pollers.
zabbix_server__start_pollers: 5

# StartIPMIPollers
# Number of pre-forked instances of IPMI pollers.
#       The IPMI manager process is automatically started when at least one IPMI poller is started.
zabbix_server__start_ipmi_pollers: 0

# StartPreprocessors
# Number of pre-forked instances of preprocessing workers.
#       The preprocessing manager process is automatically started when preprocessor worker is started.
zabbix_server__start_preprocessors: 3

# StartPollersUnreachable
# Number of pre-forked instances of pollers for unreachable hosts (including IPMI and Java).
# At least one poller for unreachable hosts must be running if regular, IPMI or Java pollers
# are started.
zabbix_server__start_pollers_unreachable: 1

# StartTrappers
# Number of pre-forked instances of trappers.
# Trappers accept incoming connections from Zabbix sender and active agents.
zabbix_server__start_trappers: 5

# StartPingers
# Number of pre-forked instances of ICMP pingers.
zabbix_server__start_pingers: 1

# StartDiscoverers
# Number of pre-forked instances of discoverers.
zabbix_server__start_discoverers: 1

# StartHTTPPollers
# Number of pre-forked instances of HTTP pollers.
zabbix_server__start_http_pollers: 1

# StartTimers
# Number of pre-forked instances of timers.
# Timers process time-based trigger functions and maintenance periods.
# Only the first timer process handles the maintenance periods.
zabbix_server__start_timers: 1

# StartEscalators
# Number of pre-forked instances of escalators.
zabbix_server__start_escalators: 1

# StartAlerters
# Number of pre-forked instances of alerters.
# Alerters send the notifications created by action operations.
zabbix_server__start_alerters: 3

##### JAVA Poller #####
# StartJavaPollers
# Number of pre-forked instances of Java pollers.
zabbix_server__start_java_pollers: 0

# JavaGateway
# IP address (or hostname) of Zabbix Java gateway.
# Only required if Java pollers are started.
#zabbix_server__java_gateway: 

# JavaGatewayPort
# Port that Zabbix Java gateway listens on.
zabbix_server__java_gateway_port: 10052

##### SNMP Trapper #####
# StartSNMPTrapper
# If 1, SNMP trapper process is started.
zabbix_server__start_snmp_trapper: 0

# SNMPTrapperFile
# Temporary file used for passing data from SNMP trap daemon to the server.
# Must be the same as in zabbix_trap_receiver.pl or SNMPTT configuration file.
zabbix_server__snmp_trapper_file: '/tmp/zabbix_traps.tmp'
#/var/log/snmptrap/snmptrap.log

# TrapperTimeout
#   Specifies how many seconds trapper may spend processing new data.
zabbix_server__trapper_timeout: 300

##### VMWare collectors #####
# StartVMwareCollectors
#   Number of pre-forked vmware collector instances.
zabbix_server__start_vmware_collectors: 0

# VMwareFrequency
#   How often Zabbix will connect to VMware service to obtain a new data.
zabbix_server__vmware_frequency: 60

# VMwarePerfFrequency
#    How often Zabbix will connect to VMware service to obtain performance data.
zabbix_server__vmware_perf_frequency: 60

# VMwareCacheSize
#   Size of VMware cache, in bytes. Shared memory size for storing VMware data.#
# Range: 256K-2G
zabbix_server__vmware_cache_size: 8M

# VMwareTimeout
#    Specifies how many seconds vmware collector waits for response from VMware service.
zabbix_server__vmware_timeout: 10

##### Proxies pollers #####
# StartProxyPollers
#    Number of pre-forked instances of pollers for passive proxies.
zabbix_server__start_proxy_pollers: 1

# ProxyConfigFrequency
#   How often Zabbix Server sends configuration data to a Zabbix Proxy in seconds.
#   This parameter is used only for proxies in the passive mode.
zabbix_server__proxy_config_frequency: 3600

# ProxyDataFrequency
#   How often Zabbix Server requests history data from a Zabbix Proxy in seconds.
#   This parameter is used only for proxies in the passive mode.
zabbix_server__proxy_data_frequency: 1

##### DB Syncers #####
# StartDBSyncers
#    Number of pre-forked instances of DB Syncers.
zabbix_server__start_dbsyncers: 4
